apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: "kotlin-kapt"

def localProperties = new Properties()
localProperties.load(new FileInputStream(rootProject.file("local.properties")))

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"

    defaultConfig {
        applicationId "by.paranoidandroid"
        minSdkVersion 24
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        buildConfigField "String", "API_KEY", localProperties['apiKey']

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    viewBinding.enabled = true

    packagingOptions {
        exclude 'META-INF/atomicfu.kotlin_module'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    // Lifecycle components
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    // ViewModel Kotlin support
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"

    api "androidx.fragment:fragment-ktx:$fragment_ktx_version"
    api "androidx.activity:activity-ktx:$activity_ktx_version"

    // Dagger 2
    //api "com.google.dagger:dagger:$dagger_version"
    //annotationProcessor "com.google.dagger:dagger-compiler:$dagger_version"

    api 'com.google.android.material:material:1.1.0'

    // Coroutines
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutines_version"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_coroutines_version"

    // Room
    api "androidx.room:room-runtime:$room_version"
    // Kotlin Extensions and Coroutines support for Room
    api "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    api "com.squareup.retrofit2:retrofit:$retrofit_version"
    api "com.squareup.retrofit2:converter-moshi:$retrofit_version"
    // Kotlin Coroutines support for Retrofit
    api "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$retrofit_coroutines_adapter_version"

    api "com.squareup.moshi:moshi:$moshi_version"
    api "com.squareup.moshi:moshi-kotlin:$moshi_version"

    api "com.squareup.okhttp3:okhttp:$okHttp_version"
    api "com.squareup.okhttp3:logging-interceptor:$okHttp_version"
    api "com.github.bumptech.glide:glide:$glide_version"

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
